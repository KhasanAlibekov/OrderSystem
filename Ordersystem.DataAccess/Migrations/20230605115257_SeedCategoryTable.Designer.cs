// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ordersystem.DataAccess;

#nullable disable

namespace Ordersystem.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230605115257_SeedCategoryTable")]
    partial class SeedCategoryTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.4.23259.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ordersystem.DataObjects.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Category_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Category_Name");

                    b.HasKey("CategoryID");

                    b.ToTable("TblCategory");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryName = "Trucks"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryName = "Phones"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryName = "Sport"
                        },
                        new
                        {
                            CategoryID = 4,
                            CategoryName = "Broadcast"
                        });
                });

            modelBuilder.Entity("Ordersystem.DataObjects.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderID"));

                    b.Property<double>("OrderAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PaymentReceived")
                        .HasColumnType("bit");

                    b.Property<bool>("Shipped")
                        .HasColumnType("bit");

                    b.HasKey("OrderID");

                    b.ToTable("TblOrder");
                });

            modelBuilder.Entity("Ordersystem.DataObjects.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitInStock")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("SupplierID");

                    b.ToTable("TblProduct");
                });

            modelBuilder.Entity("Ordersystem.DataObjects.Supplier", b =>
                {
                    b.Property<int>("SupplierID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Supplier_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Supplier_Address");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Supplier_City");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Supplier_Country");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Supplier_Email");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Supplier_PhoneNumber");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Supplier_PostalCode");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Supplier_Name");

                    b.Property<int>("VATNumber")
                        .HasColumnType("int")
                        .HasColumnName("Supplier_VATNumber");

                    b.HasKey("SupplierID");

                    b.ToTable("TblSupplier");

                    b.HasData(
                        new
                        {
                            SupplierID = 1,
                            Address = "Pluim 4",
                            City = "Zwevegem",
                            Country = "Belgium",
                            Email = "notyours@gmail.com",
                            Phone = "0478688699",
                            PostalCode = "9807",
                            SupplierName = "Syntra",
                            VATNumber = 123456789
                        },
                        new
                        {
                            SupplierID = 2,
                            Address = "Je ne sais pas 4",
                            City = "Lille",
                            Country = "France",
                            Email = "france@gmail.com",
                            Phone = "989997478688699",
                            PostalCode = "9807",
                            SupplierName = "Unilever",
                            VATNumber = 87966676
                        },
                        new
                        {
                            SupplierID = 3,
                            Address = "Niet goed 7",
                            City = "Nergens",
                            Country = "Zwitserland",
                            Email = "zweten@gmail.com",
                            Phone = "79797987987987",
                            PostalCode = "9807",
                            SupplierName = "Ok",
                            VATNumber = 765868797
                        },
                        new
                        {
                            SupplierID = 4,
                            Address = "Niet goed 4",
                            City = "Praag",
                            Country = "Tsjechie",
                            Email = "czech@gmail.com",
                            Phone = "878787",
                            PostalCode = "98787",
                            SupplierName = "Goedzo",
                            VATNumber = 87666565
                        });
                });

            modelBuilder.Entity("Ordersystem.DataObjects.Product", b =>
                {
                    b.HasOne("Ordersystem.DataObjects.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ordersystem.DataObjects.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });
#pragma warning restore 612, 618
        }
    }
}
